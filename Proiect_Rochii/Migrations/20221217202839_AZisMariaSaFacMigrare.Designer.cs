// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proiect_Rochii.Data;

#nullable disable

namespace Proiect_Rochii.Migrations
{
    [DbContext(typeof(Proiect_RochiiContext))]
    [Migration("20221217202839_AZisMariaSaFacMigrare")]
    partial class AZisMariaSaFacMigrare
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Proiect_Rochii.Models.Categorie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("NumeCategorie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categorie");
                });

            modelBuilder.Entity("Proiect_Rochii.Models.CategorieRochie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("CategorieID")
                        .HasColumnType("int");

                    b.Property<int>("RochieID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CategorieID");

                    b.HasIndex("RochieID");

                    b.ToTable("CategorieRochie");
                });

            modelBuilder.Entity("Proiect_Rochii.Models.Clienta", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Adresa")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeClienta")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PrenumeClienta")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Clienta");
                });

            modelBuilder.Entity("Proiect_Rochii.Models.Designer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("NumeDesigner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Designer");
                });

            modelBuilder.Entity("Proiect_Rochii.Models.Imprumut", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("ClientaID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RochieID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ClientaID");

                    b.HasIndex("RochieID");

                    b.ToTable("Imprumut");
                });

            modelBuilder.Entity("Proiect_Rochii.Models.Rochie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Denumire")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DesignerID")
                        .HasColumnType("int");

                    b.Property<string>("Marime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Pret")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("ID");

                    b.HasIndex("DesignerID");

                    b.ToTable("Rochie");
                });

            modelBuilder.Entity("Proiect_Rochii.Models.CategorieRochie", b =>
                {
                    b.HasOne("Proiect_Rochii.Models.Categorie", "Categorie")
                        .WithMany("CategoriiRochii")
                        .HasForeignKey("CategorieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proiect_Rochii.Models.Rochie", "Rochie")
                        .WithMany("CategoriiRochii")
                        .HasForeignKey("RochieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categorie");

                    b.Navigation("Rochie");
                });

            modelBuilder.Entity("Proiect_Rochii.Models.Imprumut", b =>
                {
                    b.HasOne("Proiect_Rochii.Models.Clienta", "Clienta")
                        .WithMany("Imprumuturi")
                        .HasForeignKey("ClientaID");

                    b.HasOne("Proiect_Rochii.Models.Rochie", "Rochie")
                        .WithMany()
                        .HasForeignKey("RochieID");

                    b.Navigation("Clienta");

                    b.Navigation("Rochie");
                });

            modelBuilder.Entity("Proiect_Rochii.Models.Rochie", b =>
                {
                    b.HasOne("Proiect_Rochii.Models.Designer", "Designer")
                        .WithMany("Rochii")
                        .HasForeignKey("DesignerID");

                    b.Navigation("Designer");
                });

            modelBuilder.Entity("Proiect_Rochii.Models.Categorie", b =>
                {
                    b.Navigation("CategoriiRochii");
                });

            modelBuilder.Entity("Proiect_Rochii.Models.Clienta", b =>
                {
                    b.Navigation("Imprumuturi");
                });

            modelBuilder.Entity("Proiect_Rochii.Models.Designer", b =>
                {
                    b.Navigation("Rochii");
                });

            modelBuilder.Entity("Proiect_Rochii.Models.Rochie", b =>
                {
                    b.Navigation("CategoriiRochii");
                });
#pragma warning restore 612, 618
        }
    }
}
